/* eslint-disable */

/*
* Types generated by Unity.
*
* DO NOT EDIT!
*/

{{#Enums}}
{{#unless SkipDeclaration}}
declare const enum {{Name}} {
{{#Fields}}
    {{Name}} = {{Value}},
{{/Fields}}
}
{{/unless}}
{{/Enums}}

{{#Types}}
    
{{#unless SkipDeclaration}}
{{{Declaration}}} {
    {{#Members}}
    {{#Decorators}}
    {{.}}
    {{/Decorators}}
    {{#if Comment}}
    /**
    {{#Comment}}
     * {{.}}
    {{/Comment}}
     */
    {{/if}}
    {{#Readonly}}readonly {{/Readonly}}{{{Name}}}{{#IsNullable}}?{{/IsNullable}}: {{{Type}}};
    {{/Members}}

    {{#Events}}
    {{#if Comment}}
    /**
    {{#Comment}}
     * {{.}}
    {{/Comment}}
     */
    {{/if}}
    readonly {{{Name}}}: MonoSignal{{{Generics}}};
    {{/Events}}

    {{#Ctors}}
    new({{{CtorParameterStr}}}): {{{ReturnType}}};
    {{/Ctors}}

    {{#Methods}}
    {{#if Comment}}
    /**
    {{#Comment}}
     * {{.}}
    {{/Comment}}
     */
    {{/if}}
    {{#Decorators}}
    {{.}}
    {{/Decorators}}
    {{{Declaration}}}{{{Generics}}}({{{ParameterStr}}}): {{{ReturnType}}};
    {{/Methods}}

    {{#StaticMethods}}
    {{#Decorators}}
    {{.}}
    {{/Decorators}}
    {{{Declaration}}}{{{Generics}}}({{{ParameterStr}}}): {{{ReturnType}}};
    {{/StaticMethods}}

    {{#StaticEvents}}
    {{#if Comment}}
    /**
    {{#Comment}}
     * {{.}}
    {{/Comment}}
     */
    {{/if}}
    readonly {{{Name}}}: MonoSignal{{{Generics}}};
    {{/StaticEvents}}
}
{{#if HasInstanceDeclaration}}
{{InstanceDeclaration}}
{{/if}}
{{/unless}}
{{/Types}}

